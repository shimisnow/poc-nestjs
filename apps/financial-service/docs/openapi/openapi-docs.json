{"openapi":"3.0.0","paths":{"/transaction":{"post":{"description":"This endpoint receives only positive values. The value will be automatically inverted. Only debt operations are allowed","operationId":"TransactionController_createTransaction","parameters":[{"name":"X-Api-Version","in":"header","description":"Sets the API version","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTransactionBodyDto"}}}},"responses":{"200":{"description":"Information about the created transactions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTransactionSerializer"}}}},"400":{"description":"Error validating request input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTransactionError400Serializer"}}}},"401":{"description":"Error when unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DefaultError401Serializer"}}}},"403":{"description":"Error when the user has no access to the account or the account does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTransactionError403Serializer"}}}},"412":{"description":"Error when account has insufficient balance","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTransactionError412Serializer"}}}},"500":{"description":"The server has encountered a situation it does not know how to handle. See server logs for details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTransactionError500Serializer"}}}},"502":{"description":"Internal data processing error. Probably a database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTransactionError502Serializer"}}}}},"security":[{"AccessToken":[]}],"summary":"Create a debit transaction","tags":["transaction"]}},"/balance":{"get":{"operationId":"BalanceController_getBalance","parameters":[{"name":"accountId","required":true,"in":"query","description":"Account ID","schema":{"minimum":1,"example":4225,"type":"number"}},{"name":"X-Api-Version","in":"header","description":"Sets the API version","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Information about the account balance","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetBalanceSerializer"}}}},"400":{"description":"Error validating request input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetBalanceError400Serializer"}}}},"401":{"description":"Error when unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DefaultError401Serializer"}}}},"403":{"description":"Error when the user has no access to the account or account/user does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetBalanceError403Serializer"}}}},"500":{"description":"The server has encountered a situation it does not know how to handle. See server logs for details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetBalanceError500Serializer"}}}},"502":{"description":"Internal data processing error. Probably a database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetBalanceError502Serializer"}}}}},"security":[{"AccessToken":[]}],"summary":"Retrieves balance information from a given account","tags":["balance"]}}},"info":{"title":"Financial Service","description":"","version":"1.0.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"AccessToken":{"scheme":"bearer","bearerFormat":"JWT","description":"accessToken provided by the auth service","in":"header","type":"http"}},"schemas":{"CreateTransactionBodyDto":{"type":"object","properties":{"accountId":{"type":"number","description":"Account ID that is creating the transaction","minimum":1,"example":1234},"pairAccountId":{"type":"number","description":"Account ID that is part of the transaction","minimum":1,"example":5678},"type":{"type":"string","description":"Transaction type","enum":["debit","credit"],"example":"debit"},"amount":{"type":"number","description":"Transaction amount","minimum":0.01,"example":1500.34}},"required":["accountId","pairAccountId","type","amount"]},"CreateTransactionSerializer":{"type":"object","properties":{"fromTransactionId":{"type":"number","description":"Transaction id","example":123},"toTransactionId":{"type":"number","description":"Transaction id","example":456}},"required":["fromTransactionId","toTransactionId"]},"CreateTransactionError400Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":400},"message":{"description":"","example":["accountId should not be empty"],"type":"array","items":{"type":"string"}},"error":{"type":"string","description":"HTTP error message","example":"Bad Request"}},"required":["statusCode","message","error"]},"DefaultError401DataSerializer":{"type":"object","properties":{"name":{"type":"string","description":"Unique error name. Can be used to identify the error","enum":["EmptyJsonWebTokenError","JsonWebTokenError","JsonWebTokenPayloadStrutureError","TokenExpiredError","TokenInvalidatedByServer","UserPasswordError"]},"errors":{"description":"List with one or more error messages","example":["jwt expired","maxAge exceeded","invalid signature","exp must be a number conforming to the specified constraints","wrong user or password information"],"type":"array","items":{"type":"string"}},"expiredAt":{"format":"date-time","type":"string","description":"Available when the error is related to expired token","example":"2024-02-08T12:21:56.000Z"}},"required":["name"]},"DefaultError401Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP status code","example":401},"data":{"description":"Information about the error","allOf":[{"$ref":"#/components/schemas/DefaultError401DataSerializer"}]}},"required":["statusCode"]},"CreateTransactionError403Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP error code","example":403},"message":{"type":"string","description":"HTTP error message","example":"Forbidden"},"data":{"type":"object","description":"Error information","properties":{"name":{"type":"string"},"errors":{"type":"array","items":{"type":"string"}}},"example":{"name":"InexistentOrInactiveAccount","errors":["accountId does not exists or it is inactive","pairAccountId does not exists or it is inactive"]}}},"required":["statusCode","message","data"]},"CreateTransactionError412Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":412},"message":{"type":"string","description":"Error message","example":"PreconditionFailed"},"data":{"type":"object","description":"Error information","example":{"name":"InsufficientAccountBalance"}}},"required":["statusCode","message","data"]},"CreateTransactionError500Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":500},"message":{"type":"string","description":"Additional error message","example":"Cannot set properties of undefined"},"error":{"type":"string","description":"HTTP error message","example":"Internal Server Error"}},"required":["statusCode","message","error"]},"CreateTransactionError502Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":502},"message":{"type":"string","description":"HTTP error message","example":"Bad Gateway"}},"required":["statusCode","message"]},"GetBalanceSerializer":{"type":"object","properties":{"balance":{"type":"number","description":"Account balance","example":1234.56},"cached":{"type":"boolean","description":"Informs if the value was retrieved from cache","example":true},"cachedAt":{"type":"number","description":"Informs when the value was cached","example":1707925199374}},"required":["balance","cached"]},"GetBalanceError400Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":400},"message":{"description":"Error message","example":["accountId should not be empty"],"type":"array","items":{"type":"string"}},"error":{"type":"string","description":"HTTP error message","example":"Bad Request"}},"required":["statusCode","message","error"]},"GetBalanceError403Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":403},"message":{"type":"string","description":"HTTP error message","example":"Forbidden"}},"required":["statusCode","message"]},"GetBalanceError500Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":500},"message":{"type":"string","description":"Additional error message","example":"Cannot set properties of undefined"},"error":{"type":"string","description":"HTTP error message","example":"Internal Server Error"}},"required":["statusCode","message","error"]},"GetBalanceError502Serializer":{"type":"object","properties":{"statusCode":{"type":"number","description":"HTTP code","example":502},"message":{"type":"string","description":"HTTP error message","example":"Bad Gateway"}},"required":["statusCode","message"]}}}}